// Copyright (c) 2017-present, SeetaTech, Co.,Ltd.
// Licensed under the BSD 2-Clause License.

syntax = "proto2";

package dragon;

message TensorProto {
    repeated int32 dims = 1;
    enum DataType {
        UNDEFINED = 0;
        FLOAT = 1;
        INT32 = 2;
        BYTE = 3;
        STRING = 4;
        FLOAT16 = 12;
    }
    optional DataType data_type = 2 [default = FLOAT];
    repeated float float_data = 3 [packed = true];
    repeated int32 int32_data = 4 [packed = true];
    optional bytes byte_data = 5;
    repeated bytes string_data = 6;
    optional string name = 7;
}

message TensorFillerProto {
    optional string tensor = 1;
    optional string type = 2 [default = 'constant'];
    optional float value = 3 [default = 0];
    optional float low = 4 [default = 0];
    optional float high = 5 [default = 1];
    optional float mean = 6 [default = 0];
    optional float std = 7 [default = 1];
    optional float scale = 8 [default = 3];
    enum VarianceNorm { FAN_IN = 0; FAN_OUT = 1; FAN_AVG=2; }
    optional VarianceNorm variance_norm = 9 [default = FAN_IN];
}

message TensorProtos {
  repeated TensorProto protos = 1;
}

enum DeviceType { 
	PROTO_CPU = 0;
	PROTO_CUDA = 1;
	PROTO_CNML = 2;
}

message DeviceOption {
    optional DeviceType device_type = 1 [default = PROTO_CPU];
    optional int32 device_id = 2 [default = 0];
    optional uint32 random_seed = 3 [default = 3];
    optional string engine = 4;
}

message Argument {
    optional string name = 1;
    optional float f = 2;
    optional int64 i = 3;
    optional bytes s = 4;

    repeated float floats = 7;
    repeated int64 ints = 8;
    repeated bytes strings = 9;
}

message OperatorDef {
    repeated string input = 1;
    repeated string output = 2;
    optional string name = 3;
    optional string type = 4;
    repeated Argument arg = 5;
    optional DeviceOption device_option = 6;
}

message GradientProto {
    optional string cost = 1;
    optional string wrt = 2;
    optional string external = 3;
}

message UpdaterProto {
    optional string name = 1;
    optional string type = 2;
    repeated string tensor = 3;
    repeated Argument arg = 4;
}

message GraphDef {
    optional string name = 1;
    repeated OperatorDef op = 2;
    optional string graph_type = 3;
    optional DeviceOption device_option = 5;
    repeated Argument arg = 6;

    repeated string input = 7;
    repeated string output = 8;

    repeated GradientProto gradient = 9;
    repeated UpdaterProto updater = 10;
}